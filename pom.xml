<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>AI-DormitoryService</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--可以进行热部署  如不需要，可以不配置 idea默认运行期间不自动编译 需要提前配置一下-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>


        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>
            <version>3.3.1.tmp</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.baidu.aip</groupId>
            <artifactId>java-sdk</artifactId>
            <version>4.3.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.10.1</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.1</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.junit.jupiter</groupId>-->
<!--            <artifactId>junit-jupiter-api</artifactId>-->
<!--            <version>5.5.0</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.junit.jupiter</groupId>-->
<!--            <artifactId>junit-jupiter</artifactId>-->
<!--            <version>RELEASE</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
        <!--整合mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--json @responseBody/@requestBody-->
<!--        <dependency>-->
<!--            <groupId>com.example</groupId>-->
<!--            <artifactId>fastjson</artifactId>-->
<!--            <version>1.2.54</version>-->
<!--        </dependency>-->
    </dependencies>
    <build>
        <resources>
              <resource>
                 <directory>src/main/java</directory>
              <includes>
                 <include>**/*.xml</include>
              </includes>
              </resource>
              <resource>
                 <directory>src/main/resources</directory>
              </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <!-- 输出目录(默认java.io.tmpdir) -->
                    <outputDir>E:\大学课程\软件实训\项目初始包\后端\AI-DormitoryService\src\main\java</outputDir>
                    <!-- 是否覆盖同名文件(默认false) -->
                    <fileOverride>true</fileOverride>
                    <!-- 是否打开输出目录(默认true) -->
                    <open>true</open>
                    <!-- mapper.xml 中添加二级缓存配置(默认true) -->
                    <enableCache>false</enableCache>
                    <!-- 开发者名称 -->
                    <author>liang</author>
                    <!-- 是否开启 ActiveRecord 模式(默认true) -->
                    <activeRecord>false</activeRecord>
                    <dataSource>
                        <driverName>com.mysql.jdbc.Driver</driverName>
                        <url>jdbc:mysql://localhost:3306/dormitory</url>
                        <username>root</username>
                        <password>123456</password>
                    </dataSource>
                    <strategy>
                        <!-- 字段生成策略，四种类型，从名称就能看出来含义：
                            nochange(默认),
                            underline_to_camel,(下划线转驼峰)
                            remove_prefix,(去除第一个下划线的前部分，后面保持不变)
                            remove_prefix_and_camel(去除第一个下划线的前部分，后面转驼峰) -->
                        <naming>underline_to_camel</naming>
                        <!-- 表前缀 -->
                        <tablePrefix>bmd_</tablePrefix>
                        <!--Entity中的ID生成策略（默认 id_worker） -->
                        <idGenType>uuid</idGenType>
                        <!--自定义超类 -->
                        <!--<superServiceClass>com.baomidou.base.BaseService</superServiceClass> -->
                        <!-- 要包含的表 与 exclude 二选一配置 -->
                        <!--<include> -->
                        <!--<property>sec_user</property> -->
                        <!--<property>table1</property> -->
                        <!--</include> -->
                        <!-- 要排除的表 -->
                        <!--<exclude> -->
                        <!--<property>schema_version</property> -->
                        <!--</exclude> -->
                    </strategy>
                    <packageInfo>
                        <!-- 父级包名称，如果不写，下面的service等就需要写全包名(默认com.baomidou) -->
                        <parent>com.example</parent>
                        <!--service包名(默认service) -->
                        <service>service</service>
                        <!--serviceImpl包名(默认service.impl) -->
                        <serviceImpl>service</serviceImpl>
                        <!--entity包名(默认entity) -->
                        <entity>bean</entity>
                        <!--mapper包名(默认mapper) -->
                        <mapper>mapper</mapper>
                        <!--xml包名(默认mapper.xml) -->
                        <xml>mapper.xml</xml>
                    </packageInfo>
                    <template>
                        <!-- <controller>/template/controller.java.vm</controller> -->
                    </template>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.17</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>


</project>